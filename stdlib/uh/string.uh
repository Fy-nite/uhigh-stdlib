namespace StdLib
{
    /// <summary>
    /// String utilities for Î¼High
    /// </summary>
    public static class StringUtils
    {
        /// <summary>
        /// Joins a collection of strings with a separator
        /// </summary>
        /// <param name="values">The strings to join</param>
        /// <param name="separator">The separator to use</param>
        /// <returns>A combined string</returns>
        public static func Join(values: List<string>, separator: string): string
        {
            if (Length_of(values) == 0)
            {
                return "";
            }
            
            var result = values[0];
            for (var i = 1; i < Length_of(values); i++)
            {
                result = result + separator + values[i];
            }
            return result;
        }
        
        /// <summary>
        /// Checks if a string starts with a prefix
        /// </summary>
        /// <param name="str">The string to check</param>
        /// <param name="prefix">The prefix to look for</param>
        /// <returns>True if the string starts with the prefix</returns>
        public static func StartsWith(str: string, prefix: string): bool
        {
            if (Length_of(str) < Length_of(prefix))
            {
                return false;
            }
            
            return Substring_of(str, 0, Length_of(prefix)) == prefix;
        }
        
        /// <summary>
        /// Checks if a string ends with a suffix
        /// </summary>
        /// <param name="str">The string to check</param>
        /// <param name="suffix">The suffix to look for</param>
        /// <returns>True if the string ends with the suffix</returns>
        public static func EndsWith(str: string, suffix: string): bool
        {
            var strLen = Length_of(str);
            var suffixLen = Length_of(suffix);
            
            if (strLen < suffixLen)
            {
                return false;
            }
            
            return Substring_of(str, strLen - suffixLen, suffixLen) == suffix;
        }
        
        /// <summary>
        /// Splits a string by a delimiter
        /// </summary>
        /// <param name="str">The string to split</param>
        /// <param name="delimiter">The delimiter character</param>
        /// <returns>An array of string segments</returns>
        public static func Split(str: string, delimiter: string): List<string>
        {
            // For more complex string manipulation, we can use the dotnetfunc attribute
            // to leverage .NET's string.Split functionality directly
            [dotnetfunc("System.String.Split")]
            static func StringSplit(s: string, separator: string): string[];
            
            return new List<string>(StringSplit(str, delimiter));
        }
        
        /// <summary>
        /// Trims whitespace from the start and end of a string
        /// </summary>
        /// <param name="str">The string to trim</param>
        /// <returns>The trimmed string</returns>
        public static func Trim(str: string): string
        {
            // trim the whitespace
            for (var i = 0; i < Length_of(str); i++)
            {
                if (str[i] != ' ' && str[i] != '\t' && str[i] != '\n')
                {
                    var start = i;
                    break;
                }
            }
            for (var i = Length_of(str) - 1; i >= 0; i--)
            {
                if (str[i] != ' ' && str[i] != '\t' && str[i] != '\n')
                {
                    var end = i;
                    return Substring_of(str, start, end - start + 1);
                }
            }
            return "";
        }
    }
}
